# PANOPTES development container
# Build with:
#
#         docker build --tag panoptes/build --file $POCS/ci/Dockerfile-3 -- $POCS
#
# This makes $POCS the "context" for the build, i.e. the root folder
# from where files such as requirements.txt may be copied.

FROM ubuntu:bionic as build-env

LABEL description="PANOPTES Development Container"
LABEL author="Developers for PANOPTES project"
LABEL url="https://github.com/panoptes/POCS"

ARG pan_dir=/var/panoptes

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV ENV /root/.bashrc
ENV SHELL /bin/bash
ENV PANDIR $pan_dir
ENV PANLOG $PANDIR/logs 
ENV POCS $PANDIR/POCS  
ENV PAWS $PANDIR/PAWS  
ENV PANUSER root
ENV SOLVE_FIELD=/usr/bin/solve-field

################################################################################
# Several update steps before our custom commands. By rarely changing these
# commands, we allow the caching that 'docker build' performs to save us some
# time when iterating on the Panoptes specific steps (i.e. instead of executing
# these, the cached image layer is used).

# Update the information we know about package versions.
RUN apt-get update --fix-missing

# Install the tzdata package now with interactive prompting disabled.
# Conveniently, the default timezone is UTC.
RUN DEBIAN_FRONTEND=noninteractive apt-get install --yes --quiet tzdata < /dev/null

# Upgrade other packages.
RUN DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes --quiet < /dev/null

################################################################################

# Make sure we have the appropriate bash version.
RUN rm /bin/sh \
 && ln -s /bin/bash /bin/sh


COPY . $POCS/


# Create an empty POCS directory \

RUN echo HOME=$HOME \
 && echo PANUSER=$PANUSER \
 && echo USER=$USER \
 && echo pan_dir=$pan_dir \
 && echo PATH=$PATH \
 # Make sure we have the appropriate bash version.
 && rm /bin/sh \
 && ln -s /bin/bash /bin/sh \
 # Copy files relative to $POCS on the build machine into the image.
 && mkdir -p $POCS

# TODO(jamessynge): Use a command like the following to generate a list
# of files/directories in POCS to copy, and a script that inserts that
# into here for copying.
#
#         git ls-tree HEAD |cut -d$'\t' -f2
#
# As is, this copy operation is copying a lot of extra material (e.g. the
# .git repo directory, the build and htmlcov directories, etc.).

COPY . $POCS/

RUN set -x && ls -l $POCS && ls -l $POCS/scripts/install
RUN $POCS/scripts/install/create-core-panoptes-directories.sh
RUN $POCS/scripts/install/install-dependencies.sh
